{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addQuantityWithNumber } from '../../store/actions/cartActions';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass QuickView extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      qty: parseInt(this.props.minItem),\n      max: 10,\n      min: 1\n    });\n\n    _defineProperty(this, \"handleAddToCartFromView\", () => {\n      this.props.addQuantityWithNumber(this.props.id, this.state.qty);\n      toast.success('Added to the cart', {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n      setTimeout(() => {\n        this.props.closeModal();\n      }, 5000);\n    });\n\n    _defineProperty(this, \"IncrementItem\", () => {\n      this.setState(prevState => {\n        return {\n          qty: prevState.qty + 1\n        };\n      });\n    });\n\n    _defineProperty(this, \"DecreaseItem\", () => {\n      this.setState(prevState => {\n        if (prevState.qty > parseInt(this.props.minItem)) {\n          return {\n            qty: prevState.qty - 1\n          };\n        } else {\n          return toast.warn(\"Item cant be less than minimum item\", {\n            position: \"bottom-left\",\n            autoClose: 5000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    const {\n      closeModal\n    } = this.props;\n    console.log(this.props);\n    return __jsx(\"div\", {\n      className: \"modal fade productQuickView show\",\n      style: {\n        paddingRight: '16px',\n        display: 'block'\n      }\n    }, __jsx(ToastContainer, null), __jsx(\"div\", {\n      className: \"modal-dialog modal-dialog-centered\",\n      role: \"document\"\n    }, __jsx(\"div\", {\n      className: \"modal-content\"\n    }, __jsx(\"button\", {\n      type: \"button\",\n      onClick: closeModal,\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\"\n    }, __jsx(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, __jsx(\"i\", {\n      className: \"fas fa-times\"\n    }))), __jsx(\"div\", {\n      className: \"row align-items-center\"\n    }, __jsx(\"div\", {\n      className: \"col-lg-6 col-md-6\"\n    }, __jsx(\"div\", {\n      className: \"productQuickView-image\"\n    }, __jsx(\"img\", {\n      src: this.props.image,\n      alt: \"image\"\n    }))), __jsx(\"div\", {\n      className: \"col-lg-6 col-md-6\"\n    }, __jsx(\"div\", {\n      className: \"product-content\"\n    }, __jsx(\"h3\", null, __jsx(\"a\", {\n      href: \"#\"\n    }, this.props.title)), __jsx(\"div\", {\n      className: \"price\"\n    }, __jsx(\"span\", {\n      className: \"new-price\"\n    }, \"\\u20B9  \", this.props.discountPrice)), __jsx(\"ul\", {\n      className: \"product-info\"\n    }, __jsx(\"li\", null, __jsx(\"span\", null, \"Vendor:\"), \" \", __jsx(\"a\", {\n      href: \"#\"\n    }, \"Lereve\")), __jsx(\"li\", null, __jsx(\"span\", null, \"Availability:\"), \" \", __jsx(\"a\", {\n      href: \"#\"\n    }, \"In stock (7 items)\")), __jsx(\"li\", null, __jsx(\"span\", null, \"Product Type:\"), \" \", __jsx(\"a\", {\n      href: \"#\"\n    }, \"T-Shirt\"))), __jsx(\"div\", {\n      className: \"product-color-switch\"\n    }, __jsx(\"h4\", null, \"Color:\"), __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\",\n      title: \"Black\",\n      className: \"color-black\"\n    })), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\",\n      title: \"White\",\n      className: \"color-white\"\n    })), __jsx(\"li\", {\n      className: \"active\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      title: \"Green\",\n      className: \"color-green\"\n    })), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\",\n      title: \"Yellow Green\",\n      className: \"color-yellowgreen\"\n    })), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\",\n      title: \"Teal\",\n      className: \"color-teal\"\n    })))), __jsx(\"div\", {\n      className: \"product-size-wrapper\"\n    }, __jsx(\"h4\", null, \"Size:\"), __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\"\n    }, \"XS\")), __jsx(\"li\", {\n      className: \"active\"\n    }, __jsx(\"a\", {\n      href: \"#\"\n    }, \"S\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\"\n    }, \"M\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\"\n    }, \"XL\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\"\n    }, \"XXL\")))), __jsx(\"div\", {\n      className: \"product-add-to-cart\"\n    }, __jsx(\"div\", {\n      className: \"input-counter\"\n    }, __jsx(\"span\", {\n      className: \"minus-btn\",\n      onClick: this.DecreaseItem\n    }, __jsx(\"i\", {\n      className: \"fas fa-minus\"\n    })), __jsx(\"input\", {\n      type: \"text\",\n      value: this.state.qty,\n      min: this.state.min,\n      max: this.state.max,\n      onChange: e => this.setState({\n        qty: e.target.value\n      })\n    }), __jsx(\"span\", {\n      className: \"plus-btn\",\n      onClick: this.IncrementItem\n    }, __jsx(\"i\", {\n      className: \"fas fa-plus\"\n    }))), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      onClick: this.handleAddToCartFromView\n    }, __jsx(\"i\", {\n      className: \"fas fa-cart-plus\"\n    }), \" Add to Cart\"))))))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addQuantityWithNumber: (id, qty) => {\n      dispatch(addQuantityWithNumber(id, qty));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(QuickView);","map":null,"metadata":{},"sourceType":"module"}