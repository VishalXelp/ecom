{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//component responsible for showing all for now (for later trending on home page)\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addToCart } from \"../../store/actions/cartActions\";\nimport Link from \"next/link\";\nimport ReactTooltip from \"react-tooltip\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport QuickView from \"../Modal/QuickView\";\n\nclass ProductsCard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      modalOpen: false,\n      modalImage: \"\",\n      discountPrice: 0,\n      id: null,\n      title: \"\",\n      minItem: \"\"\n    });\n\n    _defineProperty(this, \"handleAddToCart\", id => {\n      this.props.addToCart(id);\n      toast.success(\"Added to the cart\", {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    });\n\n    _defineProperty(this, \"handleModalData\", (image, id, discountPrice, title, minItem) => {\n      this.setState({\n        modalImage: image,\n        id: id,\n        discountPrice: discountPrice,\n        title: title,\n        minItem: minItem\n      });\n    });\n\n    _defineProperty(this, \"openModal\", () => {\n      this.setState({\n        modalOpen: true\n      });\n    });\n\n    _defineProperty(this, \"closeModal\", () => {\n      this.setState({\n        modalOpen: false\n      });\n    });\n  }\n\n  render() {\n    let {\n      products\n    } = this.props;\n    const {\n      modalOpen\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(ReactTooltip, null), __jsx(ToastContainer, {\n      transition: Slide\n    }), products.map((data, idx) => __jsx(\"div\", {\n      className: \"col-lg-3 col-md-6 products-col-item\",\n      key: idx\n    }, __jsx(\"div\", {\n      className: \"single-product-box\"\n    }, __jsx(\"div\", {\n      className: \"product-image\"\n    }, __jsx(\"a\", {\n      href: `/product/${data.id}`\n    }, __jsx(\"img\", {\n      src: data.image,\n      height: \"220px\",\n      width: \"262px\",\n      alt: \"image\"\n    }), __jsx(\"img\", {\n      src: data.imageHover,\n      height: \"220px\",\n      width: \"262px\",\n      alt: \"image\"\n    })), __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      \"data-tip\": \"Quick View\",\n      \"data-place\": \"left\",\n      onClick: e => {\n        e.preventDefault();\n        this.openModal();\n        this.handleModalData(data.quickView, data.id, data.discountPrice, data.title, data.minItem);\n      }\n    }, __jsx(\"i\", {\n      className: \"far fa-eye colorchange\"\n    })))), __jsx(\"li\", null))), __jsx(\"div\", {\n      className: \"product-content\"\n    }, __jsx(\"div\", {\n      className: \"custom-holder\"\n    }, __jsx(\"span\", {\n      className: \"custom-self\",\n      href: \"#\"\n    }, data.vendor), __jsx(\"span\", {\n      className: \"custom-quanity\"\n    }, \" \", \"Min Quantity : \", data.minItem)), __jsx(\"h3\", null, __jsx(\"a\", {\n      href: `/product/${data.id}`\n    }, \" \", __jsx(\"div\", {\n      className: \"custom-title\"\n    }, data.title, \" \"), \" \")), __jsx(\"div\", {\n      className: \"price-holder\"\n    }, __jsx(\"div\", {\n      className: \"price-holder2\"\n    }, \" \", __jsx(\"div\", {\n      className: \"new-price\"\n    }, \" \", \"\\u20B9 \", data.discountPrice), __jsx(\"div\", {\n      className: \"discount-price\"\n    }, \"\\u20B9 \", data.price)), __jsx(\"div\", {\n      className: \"percent-off\"\n    }, Math.round((data.price - data.discountPrice) / data.price * 100), \"% off\")), __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      className: \"btn btn-primary\",\n      onClick: e => {\n        e.preventDefault();\n        this.handleAddToCart(data.id);\n      }\n    }, \"Add to Cart\")))))), modalOpen ? __jsx(QuickView, {\n      closeModal: this.closeModal,\n      id: this.state.id,\n      image: this.state.modalImage,\n      discountPrice: this.state.discountPrice,\n      title: this.state.title,\n      minItem: this.state.minItem\n    }) : \"\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: id => {\n      dispatch(addToCart(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsCard);","map":null,"metadata":{},"sourceType":"module"}